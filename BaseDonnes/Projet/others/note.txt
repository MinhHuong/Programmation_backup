1) CRÉATION DE LA BASE :
	- nosem 	char(6) 	: 
		+ une année a 52 semaines --> on a besoin 2 chiffres pour préciser la semaine
		+ pourtant, nosem est une clé primaire, alors les valeurs de nosem ne peuvent pas être pareilles --> il faut ajouter 4 chiffres pour indiquer l'année
		+ par exemple : 492010 désigne la 49e semaine de l'année 2010 
		+ Par convention, no_sem indique le numéro de la semaine òu se trouve la date de début
		
	- codpays 	char(3)		: 
		+ le code standard de chaque pays dans le monde entier, composé de 3 lettres 
		
	- prix_ttc	number(7,2) : un nombre de 5 chiffres, avec 2 chiffres après le point décimal
	
==========================================================================
2) CRÉATION DE LA NOUVELLE BASE :
	- Mieux utiliser CHAR que VARCHAR au cas òu le nombre de caractères ne varie pas considérablement et que la chaine de caractère ne contient que des chiffres / des caractères ( pas des caractères spéciaux )
	
	- Éviter de déclarer NUMBER afin d'économiser de l'espace mémoire
	
	- Il y a des champs dont la valeur doit être précisée pour garantir la validité de données ( éviter les cas òu la requête ne renvoie aucun résultat, ou la suppression par accident des données, le prix est nul : le pris est-il égal à 0, ou la valeur n'est pas encore précisée ? )
	
	- NUMBER avec précision et scale : si l'on ne déclare que NUMBER, il va prend tout résultat que l'on insère, d'òu une flexibilité, pourtant ce sera pénible quand on change d'une base de données à une autre ( Oracle à SQL Server, par exemple ), le type NUMBER ne sera pas compréhensible par SQL Server
	
	- reduc_enf : le pourcentage de réduction --> quand il y a des enfants, le montant total sera réduit d'un taux de reduc_enf (%)
	
	- au cas òu (nb_jours, nb_nuits) ne correspondrait pas à une semaine ( à une semaine et quelques jours de plus), alors ce prix_sem_sup sera appliqué pour cette semaine supplémentaire
	Par convention : un séjour qui se dure une semaine prend 8 jours, 7 nuits
					( idem, un séjour qui se dure 2 semaines prend 15 jours, 14 nuits )
					
	- (nb_jours, nb_nuits) : quand on enregistre une réservation pour un séjour qui dure plus d'une semaine, on enregistre seulement no_sem qui concerne la date de début (date_debut)

==========================================================================

3) TÂCHES :
	
==========================================================================

4) TRIGGER :
	a. tester s'il y a encore de places pour un séjour donné avant d'effectuer la réservation
		--> éviter l'insertion de données
	
	b. chaque fois qu'une réservation pour un séjour est effectuée, incrémenter le nombre de réservations ( table SEJOURS ) ( réservation ajoutée dans DETAIL_RESERV )

	c. chaque fois qu'une réservation pour un séjour est supprimée, décrémenter le nombre de réservations ( SEJOURS ) ( réservation supprimée absolument )
	
	d. forcer l'insertion de données dans DETAIL_RESERV chaque fois qu'une nouvelle réservation est ajoutée dans RESERVATION ( annoncer un message )
	
	d. calculer automatiquement le montant de réservation into montant_resrv :
		montant_resrv = (	prix_ttc_adult * nb_adult 
						 + 	prix_ttc_enf * nb_enf 
						 +	suppl_ch_seule * nb_pers_ch_seule
						 -	prix_sem_sup ) * ( 1 - reduc_enf )
	
	e. date_reser < date_debut ( insert on reservations )
	   date_vers < date_debut  ( update on reservations )
	   date_reserv <= date_vers < date_debut
	   somme_versee >= 1/2 montant_resrv ( update on reservations )



